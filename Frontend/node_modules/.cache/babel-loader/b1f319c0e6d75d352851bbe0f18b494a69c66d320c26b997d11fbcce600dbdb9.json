{"ast":null,"code":"var _jsxFileName = \"/Users/aashik/FINAL/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n  const handleGenerateAnswer = async () => {\n    setGeneratingAnswer(true);\n    try {\n      const response = await axios({\n        url: `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${import.meta.env.VITE_API_GENERATIVE_LANGUAGE_CLIENT}`,\n        method: \"post\",\n        data: {\n          contents: [{\n            parts: [{\n              text: question\n            }]\n          }]\n        }\n      });\n      setAnswer(response[\"data\"][\"candidates\"][0][\"content\"][\"parts\"][0][\"text\"]);\n    } catch (error) {\n      console.log(error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n    setGeneratingAnswer(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat with Gemini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot-message\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              className: \"p-4\",\n              children: \"Welcome to Gemini! Ask me anything.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot-message\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              className: \"p-4\",\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask me anything...\",\n          value: question,\n          onChange: e => setQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateAnswer,\n          disabled: generatingAnswer,\n          children: generatingAnswer ? 'Generating answer...' : 'Ask'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"eqgBWirQAiWB8zwaUa/yulEzkJU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","ReactMarkdown","jsxDEV","_jsxDEV","Chatbot","_s","question","setQuestion","answer","setAnswer","generatingAnswer","setGeneratingAnswer","handleGenerateAnswer","response","url","import","meta","env","VITE_API_GENERATIVE_LANGUAGE_CLIENT","method","data","contents","parts","text","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aashik/FINAL/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\n\nconst Chatbot = () => {\n    const [question, setQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [generatingAnswer, setGeneratingAnswer] = useState(false);\n\n    const handleGenerateAnswer = async () => {\n        setGeneratingAnswer(true);\n        try {\n            const response = await axios({\n                url: `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${\n                    import.meta.env.VITE_API_GENERATIVE_LANGUAGE_CLIENT\n                }`,\n                method: \"post\",\n                data: {\n                    contents: [{ parts: [{ text: question }] }],\n                },\n            });\n\n            setAnswer(response[\"data\"][\"candidates\"][0][\"content\"][\"parts\"][0][\"text\"]);\n        } catch (error) {\n            console.log(error);\n            setAnswer(\"Sorry - Something went wrong. Please try again!\");\n        }\n\n        setGeneratingAnswer(false);\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <div className=\"chatbot-window\">\n                <div className=\"chatbot-header\">\n                    <h3>Chat with Gemini</h3>\n                </div>\n                <div className=\"chatbot-body\">\n                    <div className=\"messages\">\n                        <div className=\"message bot-message\">\n                            <ReactMarkdown className=\"p-4\">Welcome to Gemini! Ask me anything.</ReactMarkdown>\n                        </div>\n                        {answer && (\n                            <div className=\"message bot-message\">\n                                <ReactMarkdown className=\"p-4\">{answer}</ReactMarkdown>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"chatbot-input\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Ask me anything...\"\n                        value={question}\n                        onChange={(e) => setQuestion(e.target.value)}\n                    />\n                    <button onClick={handleGenerateAnswer} disabled={generatingAnswer}>\n                        {generatingAnswer ? 'Generating answer...' : 'Ask'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrCD,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAAC;QACzBc,GAAG,EAAE,0FACDC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,mCAAmC,EACrD;QACFC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UACFC,QAAQ,EAAE,CAAC;YAAEC,KAAK,EAAE,CAAC;cAAEC,IAAI,EAAEjB;YAAS,CAAC;UAAE,CAAC;QAC9C;MACJ,CAAC,CAAC;MAEFG,SAAS,CAACI,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC/E,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBf,SAAS,CAAC,iDAAiD,CAAC;IAChE;IAEAE,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACIR,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BzB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BzB,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BzB,OAAA;UAAAyB,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACN7B,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBzB,OAAA;UAAKwB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACrBzB,OAAA;YAAKwB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAChCzB,OAAA,CAACF,aAAa;cAAC0B,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAC;YAAmC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CAAC,EACLxB,MAAM,iBACHL,OAAA;YAAKwB,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAChCzB,OAAA,CAACF,aAAa;cAAC0B,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAEpB;YAAM;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN7B,OAAA;QAAKwB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BzB,OAAA;UACI8B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAE7B,QAAS;UAChB8B,QAAQ,EAAGC,CAAC,IAAK9B,WAAW,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF7B,OAAA;UAAQoC,OAAO,EAAE3B,oBAAqB;UAAC4B,QAAQ,EAAE9B,gBAAiB;UAAAkB,QAAA,EAC7DlB,gBAAgB,GAAG,sBAAsB,GAAG;QAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA3DID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA6Db,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}