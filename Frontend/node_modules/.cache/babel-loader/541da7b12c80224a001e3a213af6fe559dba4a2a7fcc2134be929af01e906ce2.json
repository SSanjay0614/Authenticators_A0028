{"ast":null,"code":"var _jsxFileName = \"/Users/aashik/FINAL/src/components/Predictor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predictor = () => {\n  _s();\n  const [smiles, setSmiles] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/predict', {\n        smiles: smiles\n      });\n      setPrediction(response.data.prediction);\n    } catch (err) {\n      if (err.response && err.response.data.error) {\n        setError(err.response.data.error);\n      } else {\n        setError('Error making prediction');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SMILES Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: smiles,\n        onChange: e => setSmiles(e.target.value),\n        placeholder: \"Enter SMILES string\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Predictor, \"K8SS+MEIaCZ5j1oFs/HWkw5YjlY=\");\n_c = Predictor;\nexport default Predictor;\nvar _c;\n$RefreshReg$(_c, \"Predictor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Predictor","_s","smiles","setSmiles","prediction","setPrediction","error","setError","handleSubmit","e","preventDefault","response","post","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["/Users/aashik/FINAL/src/components/Predictor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Predictor = () => {\r\n    const [smiles, setSmiles] = useState('');\r\n    const [prediction, setPrediction] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:5000/predict', {\r\n                smiles: smiles\r\n            });\r\n\r\n            setPrediction(response.data.prediction);\r\n        } catch (err) {\r\n            if (err.response && err.response.data.error) {\r\n                setError(err.response.data.error);\r\n            } else {\r\n                setError('Error making prediction');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>SMILES Predictor</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={smiles}\r\n                    onChange={(e) => setSmiles(e.target.value)}\r\n                    placeholder=\"Enter SMILES string\"\r\n                />\r\n                <button type=\"submit\">Predict</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {prediction && <p>Prediction: {prediction}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Predictor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,+BAA+B,EAAE;QAC/DV,MAAM,EAAEA;MACZ,CAAC,CAAC;MAEFG,aAAa,CAACM,QAAQ,CAACE,IAAI,CAACT,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOU,GAAG,EAAE;MACV,IAAIA,GAAG,CAACH,QAAQ,IAAIG,GAAG,CAACH,QAAQ,CAACE,IAAI,CAACP,KAAK,EAAE;QACzCC,QAAQ,CAACO,GAAG,CAACH,QAAQ,CAACE,IAAI,CAACP,KAAK,CAAC;MACrC,CAAC,MAAM;QACHC,QAAQ,CAAC,yBAAyB,CAAC;MACvC;IACJ;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAMqB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBACzBhB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,MAAO;QACdqB,QAAQ,EAAGd,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC3CG,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACNb,KAAK,iBAAIP,OAAA;MAAG2B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDf,UAAU,iBAAIL,OAAA;MAAAgB,QAAA,GAAG,cAAY,EAACX,UAAU;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAClB,EAAA,CAxCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}