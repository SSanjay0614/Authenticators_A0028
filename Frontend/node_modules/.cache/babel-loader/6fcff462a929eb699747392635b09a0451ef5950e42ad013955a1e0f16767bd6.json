{"ast":null,"code":"var _jsxFileName = \"/Users/aashik/FINAL/src/components/BBBP.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BBBP = () => {\n  _s();\n  // State to manage loading state\n  const [isLoading, setIsLoading] = useState(false);\n  // State to manage form data (SMILES string)\n  const [formData, setFormData] = useState({\n    smiles: \"\" // Maintain 'smiles' key for consistency\n  });\n  // State to manage prediction results\n  const [prediction, setPrediction] = useState({\n    predictedClass: null,\n    predictedProbability: null\n  });\n  // State to manage displaying result\n  const [showSpan, setShowSpan] = useState(false);\n  const handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    let inputData = {\n      ...formData\n    };\n    inputData[name] = value;\n    setFormData(inputData);\n  };\n\n  // Function to handle the 'Predict' button click\n  const handlePredictClick = e => {\n    e.preventDefault();\n    const url = \"http://localhost:5001/predict\"; // Backend Flask API endpoint\n    setIsLoading(true);\n    const jsonData = JSON.stringify(formData);\n\n    // Fetch request to the Flask backend\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: jsonData\n    }).then(response => response.json()).then(response => {\n      console.log(\"Response from backend:\", response);\n      setPrediction({\n        predictedClass: response[\"Predicted Class\"],\n        predictedProbability: response[\"Predicted Probability for Class 1\"]\n      });\n      setIsLoading(false);\n      setShowSpan(true);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      setIsLoading(false);\n      setShowSpan(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"BBBP Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          acceptCharset: \"utf-8\",\n          name: \"Modelform\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Enter SMILES String:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"smiles\",\n              name: \"smiles\",\n              value: formData.smiles,\n              onChange: handleChange,\n              placeholder: \"Enter SMILES string\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary form-control\",\n              disabled: isLoading,\n              onClick: !isLoading ? handlePredictClick : null,\n              children: isLoading ? \"Predicting...\" : \"Predict BBBP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showSpan && /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"prediction\",\n              children: prediction.predictedClass !== null && prediction.predictedProbability !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"The Predicted Class is \", prediction.predictedClass, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 74\n                }, this), \"The Predicted Probability for Class 1 is \", prediction.predictedProbability.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please fill out the SMILES input field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(BBBP, \"roGXdokCnovQs62JFdUK9qEdBzo=\");\n_c = BBBP;\nexport default BBBP;\nvar _c;\n$RefreshReg$(_c, \"BBBP\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BBBP","_s","isLoading","setIsLoading","formData","setFormData","smiles","prediction","setPrediction","predictedClass","predictedProbability","showSpan","setShowSpan","handleChange","event","value","target","name","inputData","handlePredictClick","e","preventDefault","url","jsonData","JSON","stringify","fetch","headers","Accept","method","body","then","response","json","console","log","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","acceptCharset","type","id","onChange","placeholder","disabled","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/aashik/FINAL/src/components/BBBP.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst BBBP = () => {\n  // State to manage loading state\n  const [isLoading, setIsLoading] = useState(false);\n  // State to manage form data (SMILES string)\n  const [formData, setFormData] = useState({\n    smiles: \"\",  // Maintain 'smiles' key for consistency\n  });\n  // State to manage prediction results\n  const [prediction, setPrediction] = useState({\n    predictedClass: null,\n    predictedProbability: null,\n  });\n  // State to manage displaying result\n  const [showSpan, setShowSpan] = useState(false);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    let inputData = { ...formData };\n    inputData[name] = value;\n    setFormData(inputData);\n  };\n\n  // Function to handle the 'Predict' button click\n  const handlePredictClick = (e) => {\n    e.preventDefault();\n    const url = \"http://localhost:5001/predict\"; // Backend Flask API endpoint\n    setIsLoading(true);\n    const jsonData = JSON.stringify(formData);\n\n    // Fetch request to the Flask backend\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: jsonData,\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"Response from backend:\", response);\n        setPrediction({\n          predictedClass: response[\"Predicted Class\"],\n          predictedProbability: response[\"Predicted Probability for Class 1\"],\n        });\n        setIsLoading(false);\n        setShowSpan(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        setIsLoading(false);\n        setShowSpan(true);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"container text-center mt-4\">\n        <h1 className=\"text-center\">BBBP Prediction</h1>\n        <div className=\"container\">\n          <form method=\"post\" acceptCharset=\"utf-8\" name=\"Modelform\">\n            <div className=\"text-center mt-3\">\n              <label>\n                <b>Enter SMILES String:</b>\n              </label>\n              <br />\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"smiles\"\n                name=\"smiles\"\n                value={formData.smiles}\n                onChange={handleChange}\n                placeholder=\"Enter SMILES string\"\n              />\n            </div>\n            <div className=\"form-group mt-3\">\n              <button\n                className=\"btn btn-primary form-control\"\n                disabled={isLoading}\n                onClick={!isLoading ? handlePredictClick : null}\n              >\n                {isLoading ? \"Predicting...\" : \"Predict BBBP\"}\n              </button>\n            </div>\n          </form>\n          <br />\n          <div className=\"text-center\">\n            <h4>\n              {showSpan && (\n                <span id=\"prediction\">\n                  {prediction.predictedClass !== null && prediction.predictedProbability !== null ? ( \n                    <p>\n                      The Predicted Class is {prediction.predictedClass} <br />\n                      The Predicted Probability for Class 1 is {prediction.predictedProbability.toFixed(4)}\n                    </p>\n                  ) : (\n                    <p>Please fill out the SMILES input field</p>\n                  )}\n                </span>\n              )}\n            </h4>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BBBP;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}